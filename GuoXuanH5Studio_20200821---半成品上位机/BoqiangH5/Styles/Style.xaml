<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    x:Class="BoqiangH5.Style">

    <Style TargetType="{x:Type Label}" x:Key="LabelStyle">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2,5"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="FontSize" Value="20"></Setter>               
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="LabUnitStyle">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2,5"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">        
        <Setter Property="Height" Value="25"/>        
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="2,5"/>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="FontSize" Value="18"></Setter>
            </Trigger>

        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlockStyle">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5,5"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="ComboxStyle">
        
        <Setter Property="Height" Value="26"/>
       
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="1,5"/>
        <Setter Property="SelectedIndex" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="FontSize" Value="18"></Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="ListBoxItemBorderStyle" TargetType="{x:Type ListBox}">
        <Setter Property="SelectionMode" Value="Multiple"></Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border BorderThickness="1"  MinWidth="120" Height="36">
                 
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBox Text="{Binding BitInfo}" Foreground="{Binding Path=ForeColor,Mode=TwoWay}" Background="{Binding Path=BackColor,Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                             VerticalContentAlignment="Center" Width="120" Height="26" TextAlignment="Center" IsReadOnly="True">
                                        <TextBox.Effect>
                                            <DropShadowEffect BlurRadius="10" ShadowDepth="1" />
                                        </TextBox.Effect>
                                    </TextBox>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="2,2"/>
    </Style>

    <Style x:Key="GridMenuStyle" TargetType="Grid">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="70" />
        <Setter Property="Background" Value="#FF515C66" />
       
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Height" Value="80"></Setter>
                <Setter Property="Background" Value="#FF424D55"></Setter>
                
            </Trigger>
            
            
        </Style.Triggers>

    </Style>
    
    <Style x:Key="DataGridTextColumnCenterStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!--Image属性设置-->
    <Style x:Key="ImgStyle" TargetType="Image">
        <Setter Property="Margin" Value="5,1" />
        <Setter Property="Width" Value="35" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!--Lable属性设置-->
    <Style x:Key="LableStyle" TargetType="Label">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="#FF5C91C1" />
    </Style>

    <Style x:Key="MenuItemStyle" TargetType="MenuItem">
        <Setter Property="Height" Value="34" />
        <Setter Property="Background" Value="#FF1D588E" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VerticalAlignment" Value="Bottom" />

        <!--鼠标滑过高亮菜单背景色设置-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0" SharedSizeGroup="MenuItemIconColumnGroup" MinWidth="17" Width="Auto"/>
                                <ColumnDefinition Width="Auto"  SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition x:Name="Col3" Width="20"/>
                            </Grid.ColumnDefinitions>

                            <!-- ContentPresenter to show an Icon if needed -->
                            <ContentPresenter Grid.Column="0" 
                                                  Margin="4,0,6,0" x:Name="Icon" 
                                                  VerticalAlignment="Center" ContentSource="Icon"/>

                            <!-- Content for the menu text etc -->
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                          x:Name="HeaderHost" Grid.Column="1"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="Center"
                                          ContentSource="Header"/>
                  
                            <Popup x:Name="SubMenuPopup" Placement="Right" Focusable="false" 
                                       IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource ={RelativeSource TemplatedParent}}"                                        
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border x:Name="SubMenuBorder" BorderThickness="1" Padding="2,2,2,2"
                                            BorderBrush="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" >
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
         
                    <ControlTemplate.Triggers>
                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" Value="#2f363c" TargetName="Border"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
</ResourceDictionary>